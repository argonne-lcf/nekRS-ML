#!/bin/bash
set -a

if [ "$#" -lt 2 ] || [ "$#" -gt 3 ]; then
  echo "Usages:"
  echo "    $0 <system name> <path to NEKRS_HOME>"
  echo "    $0 <system name> <path to NEKRS_HOME> <path to VENV>"
  exit 1
fi

SYSTEM="${1,,}"
NEKRS_HOME=$2
VENV_PATH=$3
DEPLOYMENT="colocated"
PROJ_ID="datascience"
QUEUE="debug"

if [ ${SYSTEM} == "aurora" ]; then
  module load frameworks
  module load git-lfs/3.5.1
elif [ ${SYSTEM} == "polaris" ]; then
  module use /soft/modulefiles/
  module load conda
  conda activate
  module load spack-pe-base cmake
fi

if [[ -z "$VENV_PATH" && ! -d ./_ssim ]]; then
  echo -e "\033[35mA Python venv was not specified, building one now ...\033[m"
  python -m venv --clear _ssim --system-site-packages
  source _ssim/bin/activate
  
  if [ ${SYSTEM} == "polaris" ]; then
    export CC=cc
    export CXX=CC
    export CUDNN_BASE=/soft/libraries/cudnn/cudnn-12-linux-x64-v9.1.0.70
    export CUDNN_LIBRARY=$CUDNN_BASE/lib/
    export CUDNN_INCLUDE_DIR=$CUDNN_BASE/include/
    export LD_LIBRARY_PATH=$CUDNN_LIBRARY:$LD_LIBRARY_PATH
  fi
  export TORCH_CMAKE_PATH=$( python -c 'import torch;print(torch.utils.cmake_prefix_path)' )
  export TORCH_PATH=$( python -c 'import torch; print(torch.__path__[0])' )
  export LD_LIBRARY_PATH=$TORCH_PATH/lib:$LD_LIBRARY_PATH
  git clone https://github.com/CrayLabs/SmartSim.git
  cd SmartSim
  pip install -e .
  if [ ${SYSTEM} == "aurora" ]; then
    DEVICE="cpu"
  elif [ ${SYSTEM} == "polaris" ]; then
    DEVICE="gpu"
  fi
  curl -O https://gist.githubusercontent.com/rickybalin/fcf1d15a26dbbc120f42943041ada827/raw/7241b9011f427f7e5f374d222e2524a337161841/aurora_config.patch
  git apply aurora_config.patch
  smart build -v --device cpu --skip-tensorflow --skip-onnx
  smart validate
  cd ..
  pip install torch_geometric==2.5.3
  VENV_PATH=${PWD}/_ssim/bin/activate
elif [ -d ./_ssim ]; then
  echo -e "\033[35mA Python venv was not specified, but fuond ./_ssim \033[m"
  VENV_PATH=${PWD}/_ssim/bin/activate
fi

echo "Setting up case:"
echo "    system: ${SYSTEM}"
echo "    NEKRS_HOME: ${NEKRS_HOME}"
echo "    deployment: ${DEPLOYMENT}"
echo

script_name=nrsrun_${SYSTEM}
if [ ${DEPLOYMENT} == "colocated" ]; then
  NODES=`cat $PBS_NODEFILE | wc -l`
  NEKRS_HOME=$NEKRS_HOME \
  PROJ_ID=$PROJ_ID \
  QUEUE=$QUEUE \
  DEPLOYMENT=$DEPLOYMENT \
  VENV_PATH=$VENV_PATH \
  ./${script_name} tgv $NODES 00:30
elif [ ${DEPLOYMENT} == "clustered" ]; then
  NODES=`cat $PBS_NODEFILE | wc -l`
  echo "Running on $NODES total nodes"
  echo "Enter the number of database node"
  read DB_NODES
  echo "simulation nodes"
  read SIM_NODES
  echo "and trainer nodes to use"
  read TRAIN_NODES
  NEKRS_HOME=$NEKRS_HOME \
  PROJ_ID=$PROJ_ID \
  QUEUE=$QUEUE \
  DEPLOYMENT=$DEPLOYMENT \
  VENV_PATH=$VENV_PATH \
  DB_NODES=$DB_NODES SIM_NODES=$SIM_NODES TRAIN_NODES=$TRAIN_NODES \
  ./${script_name} tgv $NODES 00:30
else
  echo Please select between clustered and colocated deployment of the workflow
fi

