#!/bin/bash
set -e

#--------------------------------------
: ${QUEUE:="debug"}
: ${NEKRS_GPU_MPI:=0}
: ${NEKRS_BACKEND:="cpu"}
: ${RANKS_PER_NODE:=2}
: ${CPU_BIND_LIST:="1:8"}
: ${VENV_PATH:=""}
#--------------------------------------

source $NEKRS_HOME/bin/nrsqsub_utils
setup $# 1

TOTAL_RANKS=$(( nodes * RANKS_PER_NODE ))
chk_case $TOTAL_RANKS

#--------------------------------------
# Generate the run script
RFILE=run.sh
echo "#!/bin/bash" > $RFILE

echo -e "\nexport TZ='/usr/share/zoneinfo/US/Central'" >> $RFILE

echo -e "\necho Jobid: \$PBS_JOBID" >>$RFILE
echo "echo Running on host \`hostname\`" >>$RFILE
echo "echo Running on nodes \`cat \$PBS_NODEFILE\`" >>$RFILE

echo "module restore" >> $RFILE
echo "module use /soft/modulefiles/" >> $RFILE
echo "module load PrgEnv-gnu/8.5.0" >> $RFILE
echo "module load gcc-native/12.3" >> $RFILE
echo "module load spack-pe-base/0.8.0" >> $RFILE
echo "module load cmake" >> $RFILE
echo "module load python/3.10.13" >> $RFILE
echo "source ${VENV_PATH}" >> $RFILE
echo "module list" >> $RFILE

echo -e "\nexport NEKRS_HOME=$NEKRS_HOME" >>$RFILE

echo -e "\n# Run nekRS" >>$RFILE
echo "mpiexec -n ${TOTAL_RANKS} -ppn ${RANKS_PER_NODE} --cpu-bind=list:${CPU_BIND_LIST} -- $NEKRS_HOME/bin/nekrs --setup ${case} --backend ${NEKRS_BACKEND}" >> $RFILE

echo -e "\n# Generate the halo_info, edge_weights and node_degree files" >>$RFILE
echo "mpiexec -n ${TOTAL_RANKS} -ppn ${RANKS_PER_NODE} --cpu-bind=list:${CPU_BIND_LIST} python ${NEKRS_HOME}/3rd_party/gnn/create_halo_info_par.py --POLY 3 --PATH ./gnn_outputs_poly_3" >> $RFILE

echo -e "\n# Check the GNN input files" >>$RFILE
echo "echo \"Checking GNN graph input files ...\"" >>$RFILE
echo "python ${NEKRS_HOME}/3rd_party/gnn/check_input_files.py --REF ./ref --PATH ./gnn_outputs_poly_3" >>$RFILE

echo -e "\n# Train the GNN" >>$RFILE
echo "head_node=\`head -1 \$PBS_NODEFILE | cut -d'.' -f1\`" >>$RFILE
echo "mpiexec -n ${TOTAL_RANKS} -ppn ${RANKS_PER_NODE} --cpu-bind=list:${CPU_BIND_LIST} python ${NEKRS_HOME}/3rd_party/gnn/main.py master_addr=\$head_node backend=ccl halo_swap_mode=all_to_all_opt layer_norm=True gnn_outputs_path=${PWD}/gnn_outputs_poly_3 target_loss=1.6206e-04" >> $RFILE
chmod u+x $RFILE

